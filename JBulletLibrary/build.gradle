// Note: "common.gradle" in the root project contains additional initialization
//   for this project. This initialization is applied in the "build.gradle"
//   of the root project.

plugins {
    id 'java-library'
    id 'maven-publish'
}

ext {
    group = 'com.github.stephengold'
    artifact = 'jbullet'
    version = jbulletVersion
    baseName = "${artifact}-${version}"
    websiteUrl = 'https://github.com/stephengold/jbullet'
}

dependencies {
    implementation (stackallocCoordinates) {
        exclude group: 'com.github.stephengold', module: 'asm-all'
        exclude group: 'org.apache.ant', module: 'ant'
        exclude group: 'org.apache.ant', module: 'ant-launcher'
    }
    implementation vecmathCoordinates
}

sourceSets.main.java {
    srcDirs = [rootProject.file('src')]
}

javadoc {
    // Disable doclint for JDK8+.
    if (JavaVersion.current().isJava8Compatible()){
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

tasks.register('javadocJar', Jar) {
    archiveBaseName = project.ext.baseName
    archiveClassifier = 'javadoc'
    dependsOn 'javadoc'
    description 'Creates a JAR of javadoc.'
    from javadoc.destinationDir
}
tasks.register('sourcesJar', Jar) {
    archiveBaseName = project.ext.baseName
    archiveClassifier = 'sources'
    description 'Creates a JAR of sourcecode.'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from sourceSets.main.allJava
}

assemble.dependsOn('module', 'pom')
tasks.register('module', Copy) {
    dependsOn 'generateMetadataFileForMavenPublication'
    description 'Copies the module metadata to build/libs.'
    from "${buildDir}/publications/maven/module.json"
    into "${buildDir}/libs"
    rename 'module.json', project.ext.baseName + '.module'
}
tasks.register('pom', Copy) {
    dependsOn 'generatePomFileForMavenPublication'
    description 'Copies the Maven POM to build/libs.'
    from "${buildDir}/publications/maven/pom-default.xml"
    into "${buildDir}/libs"
    rename 'pom-default.xml', project.ext.baseName + '.pom'
}

publishing {
    publications {
        maven(MavenPublication) {
            artifact javadocJar
            artifact sourcesJar
            artifactId artifact
            from components.java
            groupId project.ext.group
            pom {
                description = project.description
                developers {
                    developer {
                        email = 'jezek2@advel.cz'
                        name = 'Martin Dvorak'
                    }
                }
                licenses {
                    license {
                        distribution = 'repo'
                        name = 'Zlib License'
                        url = 'https://opensource.org/licenses/zlib-license.php'
                    }
                }
                name = project.ext.group + ':' + artifact
                scm {
                    connection = 'scm:git:git://github.com/stephengold/jbullet.git'
                    developerConnection = 'scm:git:ssh://github.com:stephengold/jbullet.git'
                    url = project.ext.websiteUrl + '/tree/master'
                }
                url = project.ext.websiteUrl
            }
            version project.ext.version
        }
    }
    // Staging to OSSRH relies on the existence of 2 properties
    // (ossrhUsername and ossrhPassword)
    // which should be stored in ~/.gradle/gradle.properties
    repositories {
        maven {
            credentials {
                username = project.hasProperty('ossrhUsername') ? ossrhUsername : 'Unknown user'
                password = project.hasProperty('ossrhPassword') ? ossrhPassword : 'Unknown password'
            }
            name = 'OSSRH'
            url = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2'
        }
    }
}
generateMetadataFileForMavenPublication.dependsOn('pom')